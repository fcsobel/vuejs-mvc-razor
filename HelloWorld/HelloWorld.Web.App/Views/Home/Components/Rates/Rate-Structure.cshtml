<template id="rate-structure-template">
    <div class="row">

        <!--Main-->
        <div class="col-md-9">

            <h5>Price Structures |
                <a v-on:click.prevent="saveData()" href="#">Save</a> | 
                <a v-on:click.prevent="addPriceStructure()" href="#">Add</a>
            </h5> 

            <div class="card" v-for="price in context.data.priceStructures">

                <div class="card-header">
                    
                    <div class="input-group">
                      <input type="text" class="form-control" placeholder="Price Structure" v-model="price.name">         
                      <div class="input-group-append">
                          <a v-on:click="deletePriceStructure(price)" href="#" class="input-group-text">Delete</a>
                      </div>
                    </div>

                </div>

                <div class="card-body">

                    <div class="row">
                        <template v-for="rateContainer in price.rates">
                            <div class="col-md-4">
                                <rate-price-list v-bind:price="price" v-bind:container="rateContainer" v-bind:context="context"></rate-price-list>
                            </div>
                        </template>
                    </div>

                </div>
            </div>


        </div>

        <!--Side-->
        <div class="col-md-3">
            <h5>Rates <a v-on:click.prevent="addRate()" href="#">Add</a></h5>
            <template v-for="rate in context.data.rates">
                <rate-edit v-bind:rate="rate" v-bind:context="context"></rate-edit>                
            </template>
        </div>

    </div>

    <!--Data-->
    @*<div class="row">

        <div class="card">
            <div class="card-header">Data</div>
            <div class="card-body">
                {{context.data.rates}}
            </div>
        </div>

        <div class="col-md-3">

            <div class="card">
                <div class="card-header">Channels</div>
                <table class="table table-bordered table-sm table-striped" style="margin:0; padding:0;">
                    <tbody>
                        <tr v-for="item in context.data.channels">
                            <td>
                                {{item.name}}
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
        <div class="col-md-3">

            <div class="card">
                <div class="card-header">Items</div>
                <table class="table table-bordered table-sm table-striped" style="margin:0; padding:0;">
                    <tbody>
                        <tr v-for="item in context.data.items">
                            <td>
                                {{item.name}}
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>

        </div>
        <div class="col-md-3">

            <div class="card">
                <div class="card-header">Rates</div>
                <table class="table table-bordered table-sm table-striped" style="margin:0; padding:0;">
                    <tbody>
                        <tr v-for="item in context.data.rates">
                            <td>
                                {{item.name}}
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>

        </div>
    </div>*@

</template>

<!--Register Sub-Components-->
<partial name="Components/Rates/Rate-Edit" />
<partial name="Components/Rates/Rate-Price-List" />

<script>
    app.component('rate-structure', {
        template: '#rate-structure-template',
        data: function () {
            return {
                context: {
                    data: {}
                }
            };
        },
        methods: {
            addPriceStructure() {

                var context = this.context;

                let price = { "id": 1, "name": "New Price Structure", rates: [] }

                context.data.rates.forEach(function (rate) {

                    let rateContainer = { rate: rate, items: [] };

                    context.data.items.forEach(function (item) {

                        let price = { net: item.net, markup: item.markup, tax: item.tax };
                        let itemContainer = { item: item, price: price };
                        rateContainer.items.push(itemContainer);

                    });

                    price.rates.push(rateContainer);
                });

                context.data.priceStructures.push(price);
            },
            addRate() {
                let item = { "id": 1, "name": "New Rate", times: [], channels: [] }
                this.context.data.rates.push(item);
            },
            deletePriceStructure(item) {
                this.context.data.priceStructures.splice(this.context.data.priceStructures.indexOf(item), 1);
            },
            async getData() {
                const { data } = await axios.get('/data/rates.json');

                this.context.data = data;

                this.context.data.rates = this.loadFromLocalStorage('rates') ?? [];
                this.context.data.priceStructures = this.loadFromLocalStorage('priceStructures') ?? [];
            },
            saveData() {
                this.saveToLocalStorage('rates', this.context.data.rates);
                this.saveToLocalStorage('priceStructures', this.context.data.priceStructures);
            },
            saveToLocalStorage(name, data) {
                const parsed = JSON.stringify(data);
                localStorage.setItem(name, parsed);

            },
            loadFromLocalStorage(name) {
                if (localStorage.getItem(name)) {
                    try {
                        return JSON.parse(localStorage.getItem(name));

                    } catch (e) {
                        localStorage.removeItem(name);
                    }                    
                }
            }
        },
        created() {
        },
        mounted() {
            this.getData();
        },
    });
</script>